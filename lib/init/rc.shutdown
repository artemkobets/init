#!/bin/sh

log() {
    printf '\033[31;1m=>\033[m %s\n' "$@"
}

killall5_sh() {
    # This is a killall5 replacement written in POSIX shell.
    # This is more or less identical in function to the
    # versions found in busybox and sbase/ubase.
    cd /proc || {
        log "ERROR: /proc doesn't exist..."
        return 1
    }

    kill -s SIGSTOP -1

    for pid in [1-9]*/; do
        case ${pid%/} in
            "$$"|"$PPID"|*[!0-9]*|1) continue ;;
        esac

        kill -s "${1:-TERM}" "${pid%/}"
    done

    kill -s SIGCONT -1
}

main() {
    PATH=/sbin:/bin:/usr/sbin:/usr/bin

    log "Waiting for services to stop..."; {
        sv -w196 force-stop /var/service/*
        sv exit /var/service/*
    } >/dev/null 2>&1

    log "Saving random seed..."; {
        dd count=1 bs=512 if=/dev/random of=/var/random.seed
    }

    log "Sending TERM signal to all processes..."; {
        killall5_sh TERM
        sleep 1
    }

    log "Sending KILL signal to all processes..."; {
        killall5_sh KILL
    }

    log "Unmounting filesystems and disabling swap..."; {
        swapoff -a
        umount -a
        mount -o remount,ro /
        sync
    }

    log "Deactivating dmcrypt devices (if any exist)."; {
        [ -x /bin/cryptsetup ] && [ -x /bin/dmsetup ] && {
            dmsetup ls --target crypt \
                       --exec "dmsetup info -c --noheadings -o open,name" |
            while read -r drive; do
                [ "${drive%%:*}" = "0" ] && cryptsetup close "${drive##*:}"
            done
        }
    }
}

main
